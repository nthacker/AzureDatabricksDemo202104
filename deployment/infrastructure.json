{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "variables": {
        "namePrefix": "[resourceGroup().name]",
        "subscriptionId": "[subscription().subscriptionId]",
        "unique": "[uniqueString(resourceGroup().id)]",
        "vault": "[concat('kv',uniqueString(resourceGroup().id))]",
        "tenantId": "[subscription().tenantId]",
        "applicationInsightsName": "[concat('ai',uniqueString(resourceGroup().id))]",
        "containerRegistryName": "[concat('cr',uniqueString(resourceGroup().id))]",
        "workspaceName": "[concat('databricks', variables('unique'))]",
        "managedResourceGroupName": "[concat('databricks-rg-', variables('workspaceName'), '-', uniqueString(variables('workspaceName'), resourceGroup().id))]",
        "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
        "databricksiothub2": "[concat('iot',uniqueString(resourceGroup().id))]",
        "databricksdemocosmosdb2": "[concat('cosmos',uniqueString(resourceGroup().id))]",
        "databricksdatalakestg2": "[concat('adls',uniqueString(resourceGroup().id))]",
        "databricksdemoname2": "[concat('stg',uniqueString(resourceGroup().id))]",
        "lengthofstaystorage2": "[concat('blob',uniqueString(resourceGroup().id))]",
        "synapsedatabricksdemo2stg": "[concat('snpsstg',uniqueString(resourceGroup().id))]",
        "synapsedatabricksdemo2": "[concat('snps',uniqueString(resourceGroup().id))]",
        "IoTSecuritySolutions_databricksiothub_name": "[concat('iotsec',uniqueString(resourceGroup().id))]"
    },
    "parameters": {},
    "resources": [
        {
            "type": "Microsoft.Devices/IotHubs",
            "apiVersion": "2020-08-01",
            "name": "[variables('databricksiothub2')]",
            "location": "westus2",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "capacity": 1
            },
            "identity": {
                "type": "None"
            },
            "properties": {
                "ipFilterRules": [],
                "eventHubEndpoints": {
                    "events": {
                        "retentionTimeInDays": 1,
                        "partitionCount": 4
                    }
                },
                "routing": {
                    "endpoints": {
                        "serviceBusQueues": [],
                        "serviceBusTopics": [],
                        "eventHubs": [],
                        "storageContainers": []
                    },
                    "routes": [],
                    "fallbackRoute": {
                        "name": "$fallback",
                        "source": "DeviceMessages",
                        "condition": "true",
                        "endpointNames": [
                            "events"
                        ],
                        "isEnabled": true
                    }
                },
                "storageEndpoints": {},
                "messagingEndpoints": {
                    "fileNotifications": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "enableFileUploadNotifications": false,
                "cloudToDevice": {
                    "maxDeliveryCount": 10,
                    "defaultTtlAsIso8601": "PT1H",
                    "feedback": {
                        "lockDurationAsIso8601": "PT1M",
                        "ttlAsIso8601": "PT1H",
                        "maxDeliveryCount": 10
                    }
                },
                "features": "None"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-06-01-preview",
            "name": "[variables('databricksdemocosmosdb2')]",
            "location": "West US 2",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": "",
                "CosmosAccountType": "Non-Production"
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "createMode": "Default",
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "West US 2",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('databricksdatalakestg2')]",
            "location": "westus2",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('databricksdemoname2')]",
            "location": "westus2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('lengthofstaystorage2')]",
            "location": "westus2",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2020-08-01-preview",
            "name": "[variables('synapsedatabricksdemo2stg')]",
            "location": "westus2",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2019-06-01-preview",
            "name": "[variables('synapsedatabricksdemo2')]",
            "location": "westus2",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "connectivityEndpoints": {
                    "web": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f2a779d6f-0806-4359-a6e8-f1fd57bb5dd7%2fresourceGroups%2fazure-databricks-demo%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', variables('synapsedatabricksdemo2'))]",
                    "dev": "[concat('https://', variables('synapsedatabricksdemo2'), '.dev.azuresynapse.net')]",
                    "sqlOnDemand": "[concat(variables('synapsedatabricksdemo2'), '-ondemand.sql.azuresynapse.net')]",
                    "sql": "[concat(variables('synapsedatabricksdemo2'), '.sql.azuresynapse.net')]"
                },
                "defaultDataLakeStorage": {
                    "accountUrl": "https://synapsedatabricksdemo.dfs.core.windows.net",
                    "filesystem": "analytics"
                },
                "sqlAdministratorLogin": "sqladminuser",
                "privateEndpointConnections": [],
                "encryption": {}
            }
        },
        {
            "type": "Microsoft.Databricks/workspaces",
            "apiVersion": "2018-04-01",
            "name": "[variables('workspaceName')]",
            "location": "westus2",
            "dependsOn": [],
            "sku": {
                "name": "premium"
            },
            "properties": {
                "managedResourceGroupId": "[variables('managedResourceGroupId')]",
                "parameters": {},
                "authorizations": [],
                "createdBy": {},
                "updatedBy": {},
                "createdDateTime": "2020-12-03T01:03:23.6129911Z"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(variables('databricksdemocosmosdb2'), '/Patients')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databricksdemocosmosdb2'))]"
            ],
            "properties": {
                "resource": {
                    "id": "Patients"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.Security/IoTSecuritySolutions",
            "apiVersion": "2019-08-01",
            "name": "[variables('IoTSecuritySolutions_databricksiothub_name')]",
            "location": "West US 2",
            "dependsOn": [
                "[resourceId('Microsoft.Devices/IotHubs', variables('databricksiothub2'))]"
            ],
            "properties": {
                "displayName": "[variables('IoTSecuritySolutions_databricksiothub_name')]",
                "status": "Enabled",
                "export": [],
                "disabledDataSources": [],
                "iotHubs": [
                    "[resourceId('Microsoft.Devices/IotHubs', variables('databricksiothub2'))]"
                ],
                "recommendationsConfiguration": [
                    {
                        "recommendationType": "IoT_ACRAuthentication",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_AgentSendsUnutilizedMessages",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_AuditdNotReceived",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_Baseline",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_EdgeHubMemOptimize",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_EdgeLoggingOptions",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_InconsistentModuleSettings",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_InstallAgent",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_IPFilter_DenyAll",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_IPFilter_PermissiveRule",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_OpenPorts",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_PermissiveFirewallPolicy",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_PermissiveInputFirewallRules",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_PermissiveOutputFirewallRules",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_PrivilegedDockerOptions",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_RecommendedIpRulesByBaseLine",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_SharedCredentials",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_VulnerableTLSCipherSuite",
                        "status": "Enabled"
                    },
                    {
                        "recommendationType": "IoT_EOL_OSversion",
                        "status": "Enabled"
                    }
                ],
                "unmaskedIpLoggingStatus": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdatalakestg2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdatalakestg2'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdemoname2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": [
                        {
                            "allowedOrigins": [
                                "https://mlworkspace.azure.ai",
                                "https://ml.azure.com",
                                "https://*.ml.azure.com",
                                "https://mlworkspacecanary.azure.ai",
                                "https://mlworkspace.azureml-test.net"
                            ],
                            "allowedMethods": [
                                "GET",
                                "HEAD"
                            ],
                            "maxAgeInSeconds": 1800,
                            "exposedHeaders": [
                                "*"
                            ],
                            "allowedHeaders": [
                                "*"
                            ]
                        }
                    ]
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('lengthofstaystorage2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('lengthofstaystorage2'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2stg'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('synapsedatabricksdemo2stg'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdatalakestg2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdatalakestg2'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdemoname2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('lengthofstaystorage2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('lengthofstaystorage2'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2stg'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('synapsedatabricksdemo2stg'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdatalakestg2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdatalakestg2'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdemoname2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('lengthofstaystorage2'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('lengthofstaystorage2'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2stg'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('synapsedatabricksdemo2stg'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('synapsedatabricksdemo2'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/firewallRules",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2'), '/allowAll')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('synapsedatabricksdemo2'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/integrationruntimes",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2'), '/AutoResolveIntegrationRuntime')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('synapsedatabricksdemo2'))]"
            ],
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/securityAlertPolicies",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('synapsedatabricksdemo2'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(variables('synapsedatabricksdemo2'), '/SynapseDW')]",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('synapsedatabricksdemo2'))]"
            ],
            "sku": {
                "name": "DW100c",
                "capacity": 0
            },
            "properties": {
                "status": "Paused",
                "maxSizeBytes": 263882790666240,
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "restorePointInTime": "0001-01-01T00:00:00",
                "creationDate": "2020-12-29T15:36:37.893Z",
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2020-06-01-preview",
            "name": "[concat(variables('databricksdemocosmosdb2'), '/Patients/profiles')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('databricksdemocosmosdb2'), 'Patients')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('databricksdemocosmosdb2'))]"
            ],
            "properties": {
                "resource": {
                    "id": "profiles",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/profiles"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('lengthofstaystorage2'), '/default/analytics')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('lengthofstaystorage2'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('lengthofstaystorage2'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdemoname2'), '/default/azureml')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('databricksdemoname2'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdemoname2'), '/default/azureml-blobstore-5488c903-7ded-456e-89d9-ce234723749b')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('databricksdemoname2'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('databricksdemoname2'), '/default/azureml-metrics')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('databricksdemoname2'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('lengthofstaystorage2'), '/default/production')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('lengthofstaystorage2'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('lengthofstaystorage2'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2020-08-01-preview",
            "name": "[concat(variables('lengthofstaystorage2'), '/default/training')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('lengthofstaystorage2'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('lengthofstaystorage2'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "name": "[variables('vault')]",
            "location": "westus2",
            "properties": {
                "tenantId": "[variables('tenantId')]",
                "sku": {
                    "name": "standard",
                    "family": "A"
                },
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[variables('applicationInsightsName')]",
            "location": "westus2",
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2019-05-01",
            "name": "[variables('containerRegistryName')]",
            "location": "westus2",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "adminUserEnabled": true
            }
        },
        {
            "type": "Microsoft.MachineLearningServices/workspaces",
            "apiVersion": "2019-11-01",
            "name": "databricksdemomlws2",
            "location": "westus2",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('vault'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
            ],
            "identity": {
                "type": "systemAssigned"
            },
            "properties": {
                "friendlyName": "databricksdemomlws2",
                "keyVault": "[resourceId('Microsoft.KeyVault/vaults',variables('vault'))]",
                "applicationInsights": "[resourceId('Microsoft.Insights/components',variables('applicationInsightsName'))]",
                "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries',variables('containerRegistryName'))]",
                "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('databricksdemoname2'))]"
            }
        }
    ]
}